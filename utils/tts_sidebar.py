import streamlit as st

try:
    from gtts import gTTS
    GTTS_AVAILABLE = True
except ImportError:
    GTTS_AVAILABLE = False

def show_tts_sidebar():
    st.sidebar.subheader("ðŸ”Š Ustawienia TTS")
    # UWAGA: Blokada wyboru OpenAI TTS na potrzeby testÃ³w!
    # JeÅ›li chcesz przywrÃ³ciÄ‡ wybÃ³r OpenAI TTS, ZAMIEÅƒ poniÅ¼szy blok na ten kod:
    #
    # tts_options = ["OpenAI TTS"]
    # default_index = 0
    # if GTTS_AVAILABLE:
    #     tts_options.append("gTTS (Google)")
    #     default_index = 1  # JeÅ›li gTTS dostÄ™pne, ustaw jako domyÅ›lne
    # tts_provider = st.sidebar.selectbox(
    #     "Wybierz dostawcÄ™ TTS:",
    #     tts_options,
    #     index=default_index,
    #     key="tts_provider",
    #     help="OpenAI TTS: pÅ‚atne, lepsze gÅ‚osy, wiÄ™cej opcji\ngTTS: darmowe, podstawowa jakoÅ›Ä‡"
    # )
    # if tts_provider == "OpenAI TTS":
    #     st.sidebar.caption("ðŸ’° PÅ‚atne â€¢ ðŸŽ­ Wiele gÅ‚osÃ³w â€¢ ðŸ”Š Wysoka jakoÅ›Ä‡")
    # elif tts_provider == "gTTS (Google)":
    #     st.sidebar.caption("ðŸ†“ Darmowe â€¢ ðŸ¤– Podstawowe gÅ‚osy â€¢ âš¡ Szybkie")
    # if not GTTS_AVAILABLE and len(tts_options) == 1:
    #     st.sidebar.caption("ðŸ’¡ Zainstaluj gTTS dla darmowej opcji: `pip install gtts`")
    # --- BLOKADA OPENAI TTS (wersja testowa) ---
    if GTTS_AVAILABLE:
        tts_options = ["gTTS (Google)"]
        tts_provider = st.sidebar.selectbox(
            "Wybierz dostawcÄ™ TTS:",
            tts_options,
            index=0,
            key="tts_provider",
            help="Wersja testowa: dostÄ™pny tylko gTTS (Google) - darmowy, podstawowa jakoÅ›Ä‡"
        )
        st.sidebar.info("OpenAI TTS jest zablokowane w tej wersji testowej. DostÄ™pny tylko gTTS (Google).")
    else:
        st.sidebar.warning("gTTS (Google) nie jest dostÄ™pny. Zainstaluj pakiet gtts.")
        st.session_state["tts_provider"] = "gTTS (Google)"
    # --- KONIEC BLOKADY ---
